// Generated by view binder compiler. Do not edit!
package com.kitolus.heightadjustment.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.kitolus.heightadjustment.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemHistoryBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageButton btnDelete;

  @NonNull
  public final TextView tvCarNum;

  @NonNull
  public final TextView tvExtra;

  @NonNull
  public final TextView tvHeartPlate;

  @NonNull
  public final TextView tvTimestamp;

  private ItemHistoryBinding(@NonNull CardView rootView, @NonNull ImageButton btnDelete,
      @NonNull TextView tvCarNum, @NonNull TextView tvExtra, @NonNull TextView tvHeartPlate,
      @NonNull TextView tvTimestamp) {
    this.rootView = rootView;
    this.btnDelete = btnDelete;
    this.tvCarNum = tvCarNum;
    this.tvExtra = tvExtra;
    this.tvHeartPlate = tvHeartPlate;
    this.tvTimestamp = tvTimestamp;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemHistoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemHistoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_history, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemHistoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnDelete;
      ImageButton btnDelete = ViewBindings.findChildViewById(rootView, id);
      if (btnDelete == null) {
        break missingId;
      }

      id = R.id.tvCarNum;
      TextView tvCarNum = ViewBindings.findChildViewById(rootView, id);
      if (tvCarNum == null) {
        break missingId;
      }

      id = R.id.tvExtra;
      TextView tvExtra = ViewBindings.findChildViewById(rootView, id);
      if (tvExtra == null) {
        break missingId;
      }

      id = R.id.tvHeartPlate;
      TextView tvHeartPlate = ViewBindings.findChildViewById(rootView, id);
      if (tvHeartPlate == null) {
        break missingId;
      }

      id = R.id.tvTimestamp;
      TextView tvTimestamp = ViewBindings.findChildViewById(rootView, id);
      if (tvTimestamp == null) {
        break missingId;
      }

      return new ItemHistoryBinding((CardView) rootView, btnDelete, tvCarNum, tvExtra, tvHeartPlate,
          tvTimestamp);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
